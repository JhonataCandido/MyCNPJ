// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;

namespace MyCNPJ.Migrations
{
    [DbContext(typeof(MyCNPJ.DataContext.DataContext))]
    [Migration("20220812072908_fixtables")]
    partial class fixtables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("MyCNPJ.Entities.AtividadesPrincipais", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CnpjDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CnpjDataId");

                    b.ToTable("AtividadesPrincipais");
                });

            modelBuilder.Entity("MyCNPJ.Entities.AtividadesSecundarias", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CnpjDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CnpjDataId");

                    b.ToTable("AtividadesSecundarias");
                });

            modelBuilder.Entity("MyCNPJ.Entities.Billing", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Database")
                        .HasColumnType("bit");

                    b.Property<bool>("Free")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Billing");
                });

            modelBuilder.Entity("MyCNPJ.Entities.CnpjData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Abertura")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bairro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("BillingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CapitalSocial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cnpj")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Complemento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataSituacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataSituacaoEspecial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Efr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fantasia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logradouro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotivoSituacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Municipio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NaturezaJuridica")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Porte")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Situacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SituacaoEspecial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Uf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BillingId");

                    b.ToTable("CnpjData");
                });

            modelBuilder.Entity("MyCNPJ.Entities.Qsa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CnpjDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeRepLegal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaisOrigem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Qual")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QualRepLegal")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CnpjDataId");

                    b.ToTable("Qsa");
                });

            modelBuilder.Entity("MyCNPJ.Entities.AtividadesPrincipais", b =>
                {
                    b.HasOne("MyCNPJ.Entities.CnpjData", null)
                        .WithMany("AtividadePrincipal")
                        .HasForeignKey("CnpjDataId");
                });

            modelBuilder.Entity("MyCNPJ.Entities.AtividadesSecundarias", b =>
                {
                    b.HasOne("MyCNPJ.Entities.CnpjData", null)
                        .WithMany("AtividadesSecundarias")
                        .HasForeignKey("CnpjDataId");
                });

            modelBuilder.Entity("MyCNPJ.Entities.CnpjData", b =>
                {
                    b.HasOne("MyCNPJ.Entities.Billing", "Billing")
                        .WithMany()
                        .HasForeignKey("BillingId");

                    b.Navigation("Billing");
                });

            modelBuilder.Entity("MyCNPJ.Entities.Qsa", b =>
                {
                    b.HasOne("MyCNPJ.Entities.CnpjData", null)
                        .WithMany("Qsa")
                        .HasForeignKey("CnpjDataId");
                });

            modelBuilder.Entity("MyCNPJ.Entities.CnpjData", b =>
                {
                    b.Navigation("AtividadePrincipal");

                    b.Navigation("AtividadesSecundarias");

                    b.Navigation("Qsa");
                });
#pragma warning restore 612, 618
        }
    }
}
